<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ThreadsToolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBABFBQUAhQU
        FAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcXFwIXFxcCHh4eBigo
        KD0vLy95LS0teygoKGcmJiZJJiYmKSMjIw0dHR0GGRkZAxUVFQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAREREEERERBxEREQcTExMHICAgFSUl
        JSslJSU1RkZGnHh4eO5wcHD/XV1d+TQ0NMwoKCiOKCgocigoKGMnJydSJycnQScnJzAlJSUiIyMjFh4e
        Hg4YGBgKFBQUBxEREQcREREHERERBxEREQcREREHERERBxEREQQAAAAAFRUVCTs7OoRTUlGrU1JRq1NS
        UqtTU1KrVFNTrFRUU65WVVSyUVFQxYaGhfqCgoL/eXl5/kNDQ8pTUlK2VlZVt1ZWVblXVlW5VlZVuFVV
        VLdUVFO1U1NSsUxMS65UU1KrU1NSq1NTUqtTUlKrU1JRq1NSUatSUlGrPj49ihYWFgsQEBALpaSh48/O
        y//Cwb//z87L/9HPzf/R0M3/0tDO/8fGw//Ewr//oqGf/4+Pj/+Ojo7/f39//7i3tP/R0Mz/0tDN/9HQ
        zf/R0Mz/0c/M/9DPzP/Qzsv/xcTB/8bEwv/R0M3/0M/N/9DPzP/Pzsv/wcC+/87Nyv+urarrEBAQDgQE
        BASsq6jhtbSz/5qamv+zsrH/0c/N/9PRz//Ny8j/xcPA/8vKx/+Eg4L/np6e/52dnf+ampr/jo2M/8bF
        wv/T0s//1dTR/9XT0P/U09D/1NPP/9TSz//T0s7/xMPA/8vKx//T0c//0tHP/7++vf+fn5//t7a1/7a1
        susHBwcGAAAAAL28ueTGxcP/1dXU/769vP+lpKL/qKel/4mIhv++vLr/srCu/319fP+srKz/rKys/6qq
        qv+SkpH/gH9+/6qpp//Mysf/1NPQ/9XU0f/V09D/1NLP/9PSz//S0c7/wL+8/87Myv/R0M7/wL+9/8HB
        wP/FxMH/vry67wAAAAAAAAAAsK+s7Ly7uP+9vLn/u7q3/6GhoP92dXX/Y2Ni/21ta/9wcG//s7Oz/7u7
        u/+7u7v/urq6/7i4uP+ysrL/jY2N/4SEgv+zsrD/zczJ/9PSzv/T0c7/0tDN/9HPzP/Pzsv/v767/769
        uv+9vLn/vLq4/7q5tv+xr633AAAAAAAAAAC6ubb0yMbD/8nIxf+5uLX/p6ak/729vP+rq6v/oaGh/8DA
        wP/Jycn/y8vL/8vLy//Kysv/yMjI/8XFxf/BwcH/s7Oz/4aGhv+Lioj/ubi1/8zLyP/Ozcr/zMrI/8vJ
        xv/Lysf/ysnG/8nHxP/HxsP/xcTB/7y7uP1YV1YCAAAAALq5tvzGxML/xsXC/42Miv+DgoD/jo2M/8rK
        yv/Q0ND/1NTU/9jY2P/c3Nz/29vb/9vb2//Z2dn/1tbW/9LS0v/Nzc3/x8fH/6ysrP9/f37/kI+N/5yb
        mf+Lion/jYyL/6alo/++vLr/xsXC/8XEwf/Dwr//vLu4/1pZWAhJSEcGvLq4/sXEwf/FxMH/oJ+d/4WE
        gv+FhIL/hYSC/6enpv+5uLj/tLSz/5mYl/+6urn/6enp/+rq6v/n5+f/4+Pj/97e3v/X19f/0NDQ/8fH
        x/+dnZ3/jY2M/5mZmf+Ojo7/d3Z2/3t7ef+zsq//xMLA/8LBvv+9vLn/Xl5cEVFQTw7Av7z/yMbD/8rJ
        xv/HxsP/iIeF/4iGhf+JiIb/iomH/4yLiv+qqaf/o6Kg/4uKiP+UlJP/0dHR//T09P/y8vL/7u7u/+jo
        6P/g4OD/2NjY/87Ozv/ExMT/urq6/7CwsP+lpaX/j4+P/4B/fv+8u7n/xMPA/8C/vP9kY2EZU1JRFsTD
        wP/Kycb/lpWT/4aFhP+Ih4X/iomH/4uKiP+Mi4r/trWz/9va1//c29j/o6Kg/5CPjv+MjIr/paSj/+Li
        4v/19fX/9PT0//Dw8P/o6Oj/3t7e/9PT0//Ly8v/wsHA/8PDwf+2trX/kpKR/66tq//GxcL/wsG+/2pp
        aCFdXFsex8bE/8zLyP+WlZP/iIeG/4qJh/+Mi4n/jYyL/4+OjP+7urj/397b/+Df3P+op6X/k5KR/5OS
        kf+TkpD/j4+N/7a2tf/t7e3/9fX1//T09P/t7e3/4uLi/8XFxP/Pzsv/09HP/8zLyP++vrz/t7a0/8jH
        xP/Fw8H/cnFvKWBgXibLysf/0M7M/9DOzP/JyMb/jYyL/46Ni/+Qj43/kZCP/5aVlP+6ubf/srGv/5WU
        k/+WlZP/lpWT/5aVk/+op6X/3dvZ/9PS0P/d3d3/9vb2//X19f/l5eX/xMPA/9nY1f/W1dP/1NPQ/9HQ
        zf/Ozcr/zMrI/8fGw/95eHYxbGtpLs7Myv/S0c7/1NPQ/7Oyr/+Qj43/kJCO/5KRkP+TkpH/lZSS/5aV
        lP+XlpX/mJeV/5iYlv+ZmJb/mZiW/6Cfnf/S0c7/5uXj/8/Pzf/29vb/9vb2/87Ozv/HxsP/3NvY/9rZ
        1v/X1tP/1NPQ/9HQzf/Ozcr/ysnG/4GAfzlwcG420c/N/9XU0f/V1NH/l5aU/5CQjv+SkZD/lJOR/5aV
        k/+Xl5X/mZiW/5qZl/+bmpj/nJuZ/5ybmf+cm5n/nJuZ/7m4tv/t7On/2tnW/+zs7P/29vb/2tra/42M
        i//FxMH/19bT/9rY1v/X1tP/1NPQ/9HQzf/Ny8n/iIeFQXx7eT7T0tD/2NbU/9va1//HxsT/x8bD/8fG
        xP+WlZT/mJeV/5mZl/+bmpj/nJua/56cm/+enZz/o6Kh/+Tj4f/Lysj/6ejl//Hw7f/u7er/3Nva/+/v
        7//19fX/urq6/4WFhP+6ubf/2tnW/9rY1v/W1dP/09LQ/8/Oy/+RkI5JgH9+R9bV0v/a2df/3dza/+Hf
        3f/k4+D/wL+8/5iXlv+enZz/oJ+d/52cm/+enZz/p6al/5+enf+gn57/5ePh//b08v/19PL/9PPx//Px
        7//w7+z/4+Lg/+Li4f/m5eX/2trZ/8TDwv/e3dv/3NvZ/9nY1f/W1NL/0tDO/5eXlVKMi4lP2NfU/8TD
        wv++vrz/4uHf/+bl4//S0c7/paSj/9TT0f/g39z/n56d/6alpP/29fL/wsG//7m4tf/r6uf/+Pbz//f1
        8//29fL/9fPx//Ty8P/x8O3/7u3r/+vq5//o5uT/5ePh/+Lh3v/e3dr/s7Kx/7+/vf/U09D/oaCeWpCP
        jVfZ2db/qqqp/66urv/a2df/6Ofl/+zq6P/t7Or/8vDu/+zq6P+9vLr/xsXD//j39P/39vP/+fj1//n4
        9f/5+PX/+ff0//j28//39fP/9fTy//Py8P/w7+3/7u3q/+rp5v/n5uT/5OPg/9nY1f+1tbX/tra1/9TT
        0P+mpqRimZiWX9va1//T0tD/1NPR/+bl4//q6Ob/7ezp//Dw7f/z8vD/9fTy//f18//49/T/+fj1//r5
        9v/6+ff/+vn3//r59v/5+fb/+fj1//j28//29fL/9fPx//Lx7//v7uz/7Ovo/+jn5f/l5OH/4eDe/9DP
        zv/Cwb//1tXT/6urqWqGhYM4qKim6qalpP+op6b/qqqo/6ysq/+vrq3/sbCv/7Oysf+0s7L/tbSz/7a1
        tP+2trT/t7a1/7e2tf+2trX/trW0/7a1tP+1tLP/tLOy/7OysP+xsK//sK+u/66trP+sq6n/qqmo/6in
        pv+mpaT/pKOi/6KioP+joqHtl5aUQAAAAAAeHh6rHh4e/x4eHv8gICD/IiIi/yQkJP8mJib/KCgo/ykp
        Kf8qKir/Kysr/ysrK/8tLC3/Li4u/y0tLf8rKyv/KSkp/ycnJ/8lJSX/IyMj/yEhIf8fHx//Hh4e/xwc
        HP8bGxv/Gxsb/xsbG/8bGxv/Gxsb/xoaGrYAAAAAAAAAABISEgQcHBx1ICAg/yIiIv8lJSX/Jycn/ykp
        Kf8rKyv/LS0t/y4uLv8vLy//Ly8v/ysrK3kcHBwOGxsbDhoaGg4ZGRkOGBgYDhcXFw4WFhYOFRUVDhQU
        FA4TExMOEhISDhISEg4SEhIOEhISDhISEg4SEhIOEBAQBQAAAAAAAAAAAAAAABoaGl8hISH/JCQk/yYm
        Jv8pKSn/Kysr/y0tLf8vLy//MTEx/zIyMv8yMjL/KysraAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERERAx8f
        HzQiIiI7JCQkOyUlJTsnJyc7KCgoOykpKTsqKio7KysrOyoqKjgeHh4HAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////H///+AA//4AAAAEAAAAAAAAAAAAAAACAAAABgAAAAYAA
        AACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAGAAAABwAP//8AD//////////////////8=
</value>
  </data>
</root>